// Generated by view binder compiler. Do not edit!
package edu.uw.harmony.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import edu.uw.harmony.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonChangePassword;

  @NonNull
  public final SwitchCompat darkModeSwitch;

  @NonNull
  public final TextView darkModeTextView;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final ImageView settingsDarkModeImage;

  @NonNull
  public final ConstraintLayout settingsFragment;

  @NonNull
  public final ImageView settingsGearImage;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonChangePassword, @NonNull SwitchCompat darkModeSwitch,
      @NonNull TextView darkModeTextView, @NonNull Guideline guideline,
      @NonNull ImageView settingsDarkModeImage, @NonNull ConstraintLayout settingsFragment,
      @NonNull ImageView settingsGearImage) {
    this.rootView = rootView;
    this.buttonChangePassword = buttonChangePassword;
    this.darkModeSwitch = darkModeSwitch;
    this.darkModeTextView = darkModeTextView;
    this.guideline = guideline;
    this.settingsDarkModeImage = settingsDarkModeImage;
    this.settingsFragment = settingsFragment;
    this.settingsGearImage = settingsGearImage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_change_password;
      Button buttonChangePassword = rootView.findViewById(id);
      if (buttonChangePassword == null) {
        break missingId;
      }

      id = R.id.dark_mode_switch;
      SwitchCompat darkModeSwitch = rootView.findViewById(id);
      if (darkModeSwitch == null) {
        break missingId;
      }

      id = R.id.dark_mode_textView;
      TextView darkModeTextView = rootView.findViewById(id);
      if (darkModeTextView == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = rootView.findViewById(id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.settings_darkMode_image;
      ImageView settingsDarkModeImage = rootView.findViewById(id);
      if (settingsDarkModeImage == null) {
        break missingId;
      }

      ConstraintLayout settingsFragment = (ConstraintLayout) rootView;

      id = R.id.settings_gear_image;
      ImageView settingsGearImage = rootView.findViewById(id);
      if (settingsGearImage == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, buttonChangePassword,
          darkModeSwitch, darkModeTextView, guideline, settingsDarkModeImage, settingsFragment,
          settingsGearImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
