// Generated by view binder compiler. Do not edit!
package edu.uw.harmony.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import edu.uw.harmony.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPasswordRecoveryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonPasswordRecoverFragmentContinue;

  @NonNull
  public final EditText editTextEmail;

  @NonNull
  public final ConstraintLayout frameLayout;

  @NonNull
  public final TextView textView;

  private FragmentPasswordRecoveryBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonPasswordRecoverFragmentContinue, @NonNull EditText editTextEmail,
      @NonNull ConstraintLayout frameLayout, @NonNull TextView textView) {
    this.rootView = rootView;
    this.buttonPasswordRecoverFragmentContinue = buttonPasswordRecoverFragmentContinue;
    this.editTextEmail = editTextEmail;
    this.frameLayout = frameLayout;
    this.textView = textView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPasswordRecoveryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPasswordRecoveryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_password_recovery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPasswordRecoveryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_password_recover_fragment_continue;
      Button buttonPasswordRecoverFragmentContinue = rootView.findViewById(id);
      if (buttonPasswordRecoverFragmentContinue == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      EditText editTextEmail = rootView.findViewById(id);
      if (editTextEmail == null) {
        break missingId;
      }

      ConstraintLayout frameLayout = (ConstraintLayout) rootView;

      id = R.id.textView;
      TextView textView = rootView.findViewById(id);
      if (textView == null) {
        break missingId;
      }

      return new FragmentPasswordRecoveryBinding((ConstraintLayout) rootView,
          buttonPasswordRecoverFragmentContinue, editTextEmail, frameLayout, textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
